class atiraP extends Component { //[I-S]LN=0;[I-E]
  private float time = 0; //[I-S]LN=1;[I-E]
  private SUIRect scale = new SUIRect(); //[I-S]LN=2;[I-E]
  public ObjectFile hole; //[I-S]LN=3;[I-E]
  private List<SpatialObject> balas = new LinkedList<SpatialObject>(); //[I-S]LN=4;[I-E]
  private SpatialObject shot; //[I-S]LN=5;[I-E]
  //private menu stop; //[I-S]LN=6;[I-E]
 //[I-S]LN=7;[I-E]
  void start() { //[I-S]LN=8;[I-E]
    balas.clear(); //[I-S]LN=9;[I-E]
    //stop = WorldController.findObject("cenario").findComponent("menu"); //[I-S]LN=10;[I-E]
    scale = WorldController.findObject("atira").findComponent("suirect"); //[I-S]LN=11;[I-E]
    shot = WorldController.findObject("shot"); //[I-S]LN=12;[I-E]
    dupbala(); //[I-S]LN=13;[I-E]
  }  //[I-S]LN=14;[I-E]
 //[I-S]LN=15;[I-E]
  void repeat() { //[I-S]LN=16;[I-E]
   // if (stop.OpenPosh) return; //[I-S]LN=17;[I-E]
    if (time < 1) time += 0.01f; //[I-S]LN=18;[I-E]
    atira(); //[I-S]LN=19;[I-E]
  } //[I-S]LN=20;[I-E]
 //[I-S]LN=21;[I-E]
  private void atira() { //[I-S]LN=22;[I-E]
    if (Input.isKeyDown("atira") || Input.keyboard.isKeyDown("space")) { //[I-S]LN=23;[I-E]
      scale.setInt("Height", 160); //[I-S]LN=24;[I-E]
      if (time > 0.02f) { //[I-S]LN=25;[I-E]
        reloardBalaActive(); //[I-S]LN=26;[I-E]
        time = 0; //[I-S]LN=27;[I-E]
      } //[I-S]LN=28;[I-E]
    } else scale.setInt("Height", 150); //[I-S]LN=29;[I-E]
  } //[I-S]LN=30;[I-E]
 //[I-S]LN=31;[I-E]
  private void dupbala() { //[I-S]LN=32;[I-E]
    SpatialObject bala; //[I-S]LN=33;[I-E]
    for (int value = 1; value < 12; ++value) { //[I-S]LN=34;[I-E]
      bala = myObject.Instantiate(hole); //[I-S]LN=35;[I-E]
      bala.addComponent(new moves()); //[I-S]LN=36;[I-E]
      bala.setName("bala" + value); //[I-S]LN=37;[I-E]
      bala.setEnabled(false); //[I-S]LN=38;[I-E]
      balas.add(bala); //[I-S]LN=39;[I-E]
    } //[I-S]LN=40;[I-E]
  } //[I-S]LN=41;[I-E]
 //[I-S]LN=42;[I-E]
  private void reloardBalaActive() { //[I-S]LN=43;[I-E]
    SpatialObject bala; //[I-S]LN=44;[I-E]
    boolean onoff = false; //[I-S]LN=45;[I-E]
    for (int list = 0; list < balas.size(); ++list) { //[I-S]LN=46;[I-E]
      if (!onoff) { //[I-S]LN=47;[I-E]
        bala = balas.get(list); //[I-S]LN=48;[I-E]
        if (!bala.isEnabled()) { //[I-S]LN=49;[I-E]
          bala.setEnabled(true); //[I-S]LN=50;[I-E]
          bala.position = shot.getGlobalPosition(); //[I-S]LN=51;[I-E]
          onoff = true; //[I-S]LN=52;[I-E]
          break; //[I-S]LN=53;[I-E]
        } //[I-S]LN=54;[I-E]
      } //[I-S]LN=55;[I-E]
    } //[I-S]LN=56;[I-E]
    if (!onoff) { //[I-S]LN=57;[I-E]
      bala = balas.get(0); //[I-S]LN=58;[I-E]
      bala.position = shot.getGlobalPosition(); //[I-S]LN=59;[I-E]
      bala.setEnabled(true); //[I-S]LN=60;[I-E]
    } //[I-S]LN=61;[I-E]
  } //[I-S]LN=62;[I-E]
 //[I-S]LN=63;[I-E]
  public class moves extends Component { //[I-S]LN=64;[I-E]
    private float speed = 10, time = 0; //[I-S]LN=65;[I-E]
 //[I-S]LN=66;[I-E]
    void repeat() { //[I-S]LN=67;[I-E]
      if (time < 1) time += 0.01f; //[I-S]LN=68;[I-E]
      if (time > 0.3f) { //[I-S]LN=69;[I-E]
        myObject.setEnabled(false); //[I-S]LN=70;[I-E]
        time = 0; //[I-S]LN=71;[I-E]
      } //[I-S]LN=72;[I-E]
      mov(); //[I-S]LN=73;[I-E]
    } //[I-S]LN=74;[I-E]
 //[I-S]LN=75;[I-E]
    public void mov() { //[I-S]LN=76;[I-E]
      myObject.moveInSeconds(-speed, 0, 0); //[I-S]LN=77;[I-E]
    } //[I-S]LN=78;[I-E]
  } //[I-S]LN=79;[I-E]
} //[I-S]LN=80;[I-E]