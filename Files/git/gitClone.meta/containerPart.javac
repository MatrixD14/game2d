package JAVARuntime;

import java.util.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import java.util.zip.*;
import java.text.*;
import java.net.*;
import java.math.*;
import java.io.*;
import java.nio.*;
import java.time.*;
import java.time.chrono.*;
import java.time.format.*;
import java.time.temporal.*;
import java.time.zone.*;



public class _JContainer{}

//C-R:gitTest
class gitTest extends Component { //[I-S]LN=0;[I-E]
  @Order(idx = -2) //[I-S]LN=1;[I-E]
  public String linkNamePasth; // "name do usuario do github/ nome do repositorio -->  usuario/repositorio" //[I-S]LN=2;[I-E]
 //[I-S]LN=3;[I-E]
  @Order(idx = -1) //[I-S]LN=4;[I-E]
  public String pasth; // "caminho da pasta" //[I-S]LN=5;[I-E]
 //[I-S]LN=6;[I-E]
  @Order(idx = 1) //[I-S]LN=7;[I-E]
  public String Commit = "comito"; // "menssagem ou etiqueta da modificação do arquivo" //[I-S]LN=8;[I-E]
 //[I-S]LN=9;[I-E]
  @Order(idx = 2) //[I-S]LN=10;[I-E]
  public String toke; // "codigo toke do github" //[I-S]LN=11;[I-E]
 //[I-S]LN=12;[I-E]
  private String Dir; //[I-S]LN=13;[I-E]
 //[I-S]LN=14;[I-E]
  @Order(idx = 0) //[I-S]LN=15;[I-E]
  public PropertiesButton DownLoad = //[I-S]LN=16;[I-E]
      new PropertiesButton( //[I-S]LN=17;[I-E]
          new PropertiesButtonListener() { //[I-S]LN=18;[I-E]
public             void onClicked() { //[I-S]LN=19;[I-E]
              DownLoad(); //[I-S]LN=20;[I-E]
            } //[I-S]LN=21;[I-E]
          }); //[I-S]LN=22;[I-E]
 //[I-S]LN=23;[I-E]
  @Order(idx = 3) //[I-S]LN=24;[I-E]
  public PropertiesButton UpLoad = //[I-S]LN=25;[I-E]
      new PropertiesButton( //[I-S]LN=26;[I-E]
          new PropertiesButtonListener() { //[I-S]LN=27;[I-E]
public             void onClicked() { //[I-S]LN=28;[I-E]
              UpLoad(); //[I-S]LN=29;[I-E]
            } //[I-S]LN=30;[I-E]
          }); //[I-S]LN=31;[I-E]
 //[I-S]LN=32;[I-E]
  @Order(idx = 4) //[I-S]LN=33;[I-E]
  public PropertiesButton UpLoadAll = //[I-S]LN=34;[I-E]
      new PropertiesButton( //[I-S]LN=35;[I-E]
          new PropertiesButtonListener() { //[I-S]LN=36;[I-E]
public             void onClicked() { //[I-S]LN=37;[I-E]
              UpLoadAll(); //[I-S]LN=38;[I-E]
            } //[I-S]LN=39;[I-E]
          }); //[I-S]LN=40;[I-E]
 //[I-S]LN=41;[I-E]
  public boolean verifica(boolean token, boolean pont) { //[I-S]LN=42;[I-E]
    if (!linkNamePasth.contains("/") || linkNamePasth.isEmpty()) { //[I-S]LN=43;[I-E]
      Toast.showText("esta errado o link do \"nome do usuario do git\" / nome do repositorio", 1); //[I-S]LN=44;[I-E]
      return false; //[I-S]LN=45;[I-E]
    } //[I-S]LN=46;[I-E]
    if (pasth == null || pasth.isEmpty() || (pont && !pasth.contains("."))) { //[I-S]LN=47;[I-E]
      Toast.showText("caminho para o arquivo esta faltando ou errado", 1); //[I-S]LN=48;[I-E]
      return false; //[I-S]LN=49;[I-E]
    } //[I-S]LN=50;[I-E]
    if (token && (toke == null || toke.length() < 20)) { //[I-S]LN=51;[I-E]
      Toast.showText("o toke esta vazio ou faltando", 1); //[I-S]LN=52;[I-E]
      return false; //[I-S]LN=53;[I-E]
    } //[I-S]LN=54;[I-E]
 //[I-S]LN=55;[I-E]
    Dir = Directories.getProjectFolder() + "/Files/" + pasth; //[I-S]LN=56;[I-E]
    return true; //[I-S]LN=57;[I-E]
  } //[I-S]LN=58;[I-E]
 //[I-S]LN=59;[I-E]
  public void DownLoad() { //[I-S]LN=60;[I-E]
    if (!verifica(false, true)) return; //[I-S]LN=61;[I-E]
 //[I-S]LN=62;[I-E]
    String DownloadUrl = "https://raw.githubusercontent.com/" + linkNamePasth + "/main/Files/" + pasth; //[I-S]LN=63;[I-E]
    GitClone(DownloadUrl, Dir); //[I-S]LN=64;[I-E]
 //[I-S]LN=65;[I-E]
    StringBuilder InforDate = new StringBuilder(); //[I-S]LN=66;[I-E]
    InforDate.append("{\n \"pasth\": \"").append(Dir).append("\",\n \"NameFile\": \"").append(pasth).append("\",\n \"Link\": \"").append(DownloadUrl).append("\"\n}"); //[I-S]LN=67;[I-E]
    Console.log(InforDate.toString()); //[I-S]LN=68;[I-E]
  } //[I-S]LN=69;[I-E]
 //[I-S]LN=70;[I-E]
  public void UpLoad() { //[I-S]LN=71;[I-E]
    if (!verifica(true, true)) return; //[I-S]LN=72;[I-E]
 //[I-S]LN=73;[I-E]
    String API_Url = "https://api.github.com/repos/" + linkNamePasth + "/contents/Files/" + pasth + "?ref=main"; //[I-S]LN=74;[I-E]
 //[I-S]LN=75;[I-E]
    // busca o sha do file //[I-S]LN=76;[I-E]
 //[I-S]LN=77;[I-E]
    String shas = getSha(API_Url, toke); //[I-S]LN=78;[I-E]
    GitPush(API_Url, Commit, Dir, toke, shas); //[I-S]LN=79;[I-E]
 //[I-S]LN=80;[I-E]
    Console.log(!shas.isEmpty() ? "update" : "create"); //[I-S]LN=81;[I-E]
    Console.log("Link: " + API_Url); //[I-S]LN=82;[I-E]
  } //[I-S]LN=83;[I-E]
 //[I-S]LN=84;[I-E]
  public void UpLoadAll() { //[I-S]LN=85;[I-E]
    if (!verifica(true, false)) return; //[I-S]LN=86;[I-E]
    File dir = new File(Dir); //[I-S]LN=87;[I-E]
    if (dir == null || !dir.exists()) return; //[I-S]LN=88;[I-E]
 //[I-S]LN=89;[I-E]
    // "lista todos oa file que existe" //[I-S]LN=90;[I-E]
    UpVariaPasth(dir, dir.getAbsolutePath() + ""); //[I-S]LN=91;[I-E]
  } //[I-S]LN=92;[I-E]
 //[I-S]LN=93;[I-E]
  public void UpVariaPasth(File dir, String base) { //[I-S]LN=94;[I-E]
    File[] file = dir.listFiles(); //[I-S]LN=95;[I-E]
    if (file == null) return; //[I-S]LN=96;[I-E]
    for (File f : file) { //[I-S]LN=97;[I-E]
      if (f.isDirectory()) UpVariaPasth(f, base); //[I-S]LN=98;[I-E]
      else if (!f.getName().startsWith(".")) { //[I-S]LN=99;[I-E]
 //[I-S]LN=100;[I-E]
        String name = f.getAbsolutePath().replace(base, ""); //[I-S]LN=101;[I-E]
        String cominho = f.getAbsolutePath(); //[I-S]LN=102;[I-E]
        String API_Url = "https://api.github.com/repos/" + linkNamePasth + "/contents/Files/" + pasth + name + "?ref=main"; //[I-S]LN=103;[I-E]
 //[I-S]LN=104;[I-E]
        // busca o sha do file //[I-S]LN=105;[I-E]
 //[I-S]LN=106;[I-E]
        String shas = getSha(API_Url, toke); //[I-S]LN=107;[I-E]
        GitPush(API_Url, Commit, cominho, toke, shas); //[I-S]LN=108;[I-E]
 //[I-S]LN=109;[I-E]
        Console.log(!shas.isEmpty() ? "update" : "create"); //[I-S]LN=110;[I-E]
        Console.log("Link: " + API_Url); //[I-S]LN=111;[I-E]
      } //[I-S]LN=112;[I-E]
    } //[I-S]LN=113;[I-E]
  } //[I-S]LN=114;[I-E]
 //[I-S]LN=115;[I-E]
  public void GitClone(String link, String path) { //[I-S]LN=116;[I-E]
    try { //[I-S]LN=117;[I-E]
      URL url = new URL(link); //[I-S]LN=118;[I-E]
      InputStream in = url.openStream(); //[I-S]LN=119;[I-E]
      BufferedInputStream bs = new BufferedInputStream(in); //[I-S]LN=120;[I-E]
      FileOutputStream fs = new FileOutputStream(path); //[I-S]LN=121;[I-E]
      byte[] date = new byte[1024]; //[I-S]LN=122;[I-E]
      int count; //[I-S]LN=123;[I-E]
      while ((count = bs.read(date, 0, 1024)) != -1) { //[I-S]LN=124;[I-E]
        fs.write(date, 0, count); //[I-S]LN=125;[I-E]
      } //[I-S]LN=126;[I-E]
      fs.flush(); //[I-S]LN=127;[I-E]
      fs.close(); //[I-S]LN=128;[I-E]
      bs.close(); //[I-S]LN=129;[I-E]
      in.close(); //[I-S]LN=130;[I-E]
    } catch (Exception e) { //[I-S]LN=131;[I-E]
      Console.log(e); //[I-S]LN=132;[I-E]
    } //[I-S]LN=133;[I-E]
  }  //[I-S]LN=134;[I-E]
 //[I-S]LN=135;[I-E]
  public void GitPush(String link, String menssage, String pasth, String token, String sha) { //[I-S]LN=136;[I-E]
    try { //[I-S]LN=137;[I-E]
      byte[] date = readFile(pasth); //[I-S]LN=138;[I-E]
      String encode = Base64.getEncoder().encodeToString(date); //[I-S]LN=139;[I-E]
 //[I-S]LN=140;[I-E]
      // json que sera enviado para api.github //[I-S]LN=141;[I-E]
 //[I-S]LN=142;[I-E]
      StringBuilder json = new StringBuilder(); //[I-S]LN=143;[I-E]
      json.append("{\n  \"message\": \"").append(menssage).append("\",\n  \"content\": \"").append(encode).append("\",\n  \"branch\": \"main\""); //[I-S]LN=144;[I-E]
      if (sha != null && !sha.isEmpty()) json.append(",\n  \"sha\": \"").append(sha).append("\""); //[I-S]LN=145;[I-E]
      json.append("\n}"); //[I-S]LN=146;[I-E]
      Console.log(json.toString()); //[I-S]LN=147;[I-E]
 //[I-S]LN=148;[I-E]
      URL url = new URL(link); //[I-S]LN=149;[I-E]
 //[I-S]LN=150;[I-E]
      // connect com o github //[I-S]LN=151;[I-E]
 //[I-S]LN=152;[I-E]
      HttpURLConnection com = (HttpURLConnection) url.openConnection(); //[I-S]LN=153;[I-E]
      com.setRequestMethod("PUT"); //[I-S]LN=154;[I-E]
      com.setDoOutput(true); //[I-S]LN=155;[I-E]
      com.setRequestProperty("Authorization", "token " + token); //[I-S]LN=156;[I-E]
      com.setRequestProperty("Content-Type", "application/json"); //[I-S]LN=157;[I-E]
 //[I-S]LN=158;[I-E]
      OutputStream output = com.getOutputStream(); //[I-S]LN=159;[I-E]
      output.write(json.toString().getBytes("UTF-8")); //[I-S]LN=160;[I-E]
      output.flush(); //[I-S]LN=161;[I-E]
      output.close(); //[I-S]LN=162;[I-E]
 //[I-S]LN=163;[I-E]
      /// vierifica se teve algum erro ao conectar como github //[I-S]LN=164;[I-E]
 //[I-S]LN=165;[I-E]
      int menss = com.getResponseCode(); //[I-S]LN=166;[I-E]
      Console.log(menss == 201 || menss == 200 ? "file enviado sucess" : "erro em algum folder"); //[I-S]LN=167;[I-E]
 //[I-S]LN=168;[I-E]
      InputStream input = (menss >= 400) ? com.getErrorStream() : com.getInputStream(); //[I-S]LN=169;[I-E]
      BufferedReader reader = new BufferedReader(new InputStreamReader(input)); //[I-S]LN=170;[I-E]
      StringBuilder result = new StringBuilder(); //[I-S]LN=171;[I-E]
      String line; //[I-S]LN=172;[I-E]
      while ((line = reader.readLine()) != null) result.append(line); //[I-S]LN=173;[I-E]
      Console.log("\nreposta: " + result.toString()); //[I-S]LN=174;[I-E]
      input.close(); //[I-S]LN=175;[I-E]
    } catch (Exception e) { //[I-S]LN=176;[I-E]
      Console.log(e); //[I-S]LN=177;[I-E]
    } //[I-S]LN=178;[I-E]
  } //[I-S]LN=179;[I-E]
 //[I-S]LN=180;[I-E]
  /// função que ve o tamanho do file que sera enviado para git para não manda faltando em byte //[I-S]LN=181;[I-E]
 //[I-S]LN=182;[I-E]
  public byte[] readFile(String pasth) { //[I-S]LN=183;[I-E]
    try { //[I-S]LN=184;[I-E]
      FileInputStream fs = new FileInputStream(pasth); //[I-S]LN=185;[I-E]
      ByteArrayOutputStream buffer = new ByteArrayOutputStream(); //[I-S]LN=186;[I-E]
      byte[] date = new byte[1024]; //[I-S]LN=187;[I-E]
      int read; //[I-S]LN=188;[I-E]
      while ((read = fs.read(date)) != -1) buffer.write(date, 0, read); //[I-S]LN=189;[I-E]
      fs.close(); //[I-S]LN=190;[I-E]
      return buffer.toByteArray(); //[I-S]LN=191;[I-E]
    } catch (Exception e) { //[I-S]LN=192;[I-E]
      Console.log(e); //[I-S]LN=193;[I-E]
    } //[I-S]LN=194;[I-E]
    return null; //[I-S]LN=195;[I-E]
  } //[I-S]LN=196;[I-E]
 //[I-S]LN=197;[I-E]
  /// funcão vai busca no json da api.github onde esta o "sha" do file existe no github //[I-S]LN=198;[I-E]
 //[I-S]LN=199;[I-E]
  public String getSha(String link, String token) { //[I-S]LN=200;[I-E]
    try { //[I-S]LN=201;[I-E]
      URL url = new URL(link); //[I-S]LN=202;[I-E]
 //[I-S]LN=203;[I-E]
      HttpURLConnection com = (HttpURLConnection) url.openConnection(); //[I-S]LN=204;[I-E]
      com.setRequestMethod("GET"); //[I-S]LN=205;[I-E]
      com.setRequestProperty("Authorization", "token " + token); //[I-S]LN=206;[I-E]
      com.setRequestProperty("Accept", "application/vnd.github.v3+json"); //[I-S]LN=207;[I-E]
 //[I-S]LN=208;[I-E]
      int menss = com.getResponseCode(); //[I-S]LN=209;[I-E]
      InputStream input = (menss >= 400) ? com.getErrorStream() : com.getInputStream(); //[I-S]LN=210;[I-E]
      BufferedReader reader = new BufferedReader(new InputStreamReader(input)); //[I-S]LN=211;[I-E]
      StringBuilder result = new StringBuilder(); //[I-S]LN=212;[I-E]
      String line; //[I-S]LN=213;[I-E]
      while ((line = reader.readLine()) != null) result.append(line); //[I-S]LN=214;[I-E]
      input.close(); //[I-S]LN=215;[I-E]
 //[I-S]LN=216;[I-E]
      GitJson json = (GitJson) Json.fromJson(result.toString(), GitJson.class, true); //[I-S]LN=217;[I-E]
 //[I-S]LN=218;[I-E]
      if (json != null && json.sha != null) return json.sha; //[I-S]LN=219;[I-E]
      else Console.log("falho o sha"); //[I-S]LN=220;[I-E]
      input.close(); //[I-S]LN=221;[I-E]
    } catch (Exception e) { //[I-S]LN=222;[I-E]
      Console.log(e); //[I-S]LN=223;[I-E]
    } //[I-S]LN=224;[I-E]
    return ""; //[I-S]LN=225;[I-E]
  } //[I-S]LN=226;[I-E]
 //[I-S]LN=227;[I-E]
  public static class GitJson { //[I-S]LN=228;[I-E]
    public String sha; //[I-S]LN=229;[I-E]
  } //[I-S]LN=230;[I-E]
} //[I-S]LN=231;[I-E]
//C-R:git
class git extends Component { //[I-S]LN=0;[I-E]
  @Order(idx = -2) //[I-S]LN=1;[I-E]
  public String linkNamePasth; // "name do usuario do github/ nome do repositorio -->  usuario/repositorio" //[I-S]LN=2;[I-E]
 //[I-S]LN=3;[I-E]
  @Order(idx = -1) //[I-S]LN=4;[I-E]
  public String pasth; // "caminho da pasta" //[I-S]LN=5;[I-E]
 //[I-S]LN=6;[I-E]
  @Order(idx = 1) //[I-S]LN=7;[I-E]
  public String Commit = "comito"; // "menssagem ou etiqueta da modificação do arquivo" //[I-S]LN=8;[I-E]
 //[I-S]LN=9;[I-E]
  @Order(idx = 2) //[I-S]LN=10;[I-E]
  public String toke; // "codigo toke do github" //[I-S]LN=11;[I-E]
 //[I-S]LN=12;[I-E]
  private String Dir; //[I-S]LN=13;[I-E]
 //[I-S]LN=14;[I-E]
  private gitClone gitclone = new gitClone(); //[I-S]LN=15;[I-E]
  private gitPush gitpush = new gitPush(); //[I-S]LN=16;[I-E]
  private gitPushMult gitpushmult = new gitPushMult(); //[I-S]LN=17;[I-E]
 //[I-S]LN=18;[I-E]
  @Order(idx = 0) //[I-S]LN=19;[I-E]
  public PropertiesButton DownLoad = //[I-S]LN=20;[I-E]
      new PropertiesButton( //[I-S]LN=21;[I-E]
          new PropertiesButtonListener() { //[I-S]LN=22;[I-E]
public             void onClicked() { //[I-S]LN=23;[I-E]
              DownLoad(); //[I-S]LN=24;[I-E]
            } //[I-S]LN=25;[I-E]
          }); //[I-S]LN=26;[I-E]
 //[I-S]LN=27;[I-E]
  @Order(idx = 3) //[I-S]LN=28;[I-E]
  public PropertiesButton UpLoad = //[I-S]LN=29;[I-E]
      new PropertiesButton( //[I-S]LN=30;[I-E]
          new PropertiesButtonListener() { //[I-S]LN=31;[I-E]
public             void onClicked() { //[I-S]LN=32;[I-E]
              UpLoad(); //[I-S]LN=33;[I-E]
            } //[I-S]LN=34;[I-E]
          }); //[I-S]LN=35;[I-E]
 //[I-S]LN=36;[I-E]
  @Order(idx = 4) //[I-S]LN=37;[I-E]
  public PropertiesButton UpLoadAll = //[I-S]LN=38;[I-E]
      new PropertiesButton( //[I-S]LN=39;[I-E]
          new PropertiesButtonListener() { //[I-S]LN=40;[I-E]
public             void onClicked() { //[I-S]LN=41;[I-E]
              UpLoadAll(); //[I-S]LN=42;[I-E]
            } //[I-S]LN=43;[I-E]
          }); //[I-S]LN=44;[I-E]
 //[I-S]LN=45;[I-E]
  public void DownLoad() { //[I-S]LN=46;[I-E]
    if (!verifica(false, true)) return; //[I-S]LN=47;[I-E]
 //[I-S]LN=48;[I-E]
    String DownloadUrl = "https://raw.githubusercontent.com/" + linkNamePasth + "/main/Files/" + pasth; //[I-S]LN=49;[I-E]
    gitclone.GitClone(DownloadUrl, Dir); //[I-S]LN=50;[I-E]
 //[I-S]LN=51;[I-E]
    StringBuilder InforDate = new StringBuilder(); //[I-S]LN=52;[I-E]
    InforDate.append("{\n \"pasth\": \"").append(Dir).append("\",\n \"NameFile\": \"").append(pasth).append("\",\n \"Link\": \"").append(DownloadUrl).append("\"\n}"); //[I-S]LN=53;[I-E]
    Console.log(InforDate.toString()); //[I-S]LN=54;[I-E]
  } //[I-S]LN=55;[I-E]
 //[I-S]LN=56;[I-E]
  public void UpLoad() { //[I-S]LN=57;[I-E]
    gitPush gitpush = new gitPush(); //[I-S]LN=58;[I-E]
    if (!verifica(true, true)) return; //[I-S]LN=59;[I-E]
 //[I-S]LN=60;[I-E]
    String API_Url = "https://api.github.com/repos/" + linkNamePasth + "/contents/Files/" + pasth + "?ref=main"; //[I-S]LN=61;[I-E]
 //[I-S]LN=62;[I-E]
    // busca o sha do file //[I-S]LN=63;[I-E]
 //[I-S]LN=64;[I-E]
    String shas = gitpush.getSha(API_Url, toke); //[I-S]LN=65;[I-E]
    gitpush.GitPush(API_Url, Commit, Dir, toke, shas); //[I-S]LN=66;[I-E]
 //[I-S]LN=67;[I-E]
    Console.log(!shas.isEmpty() ? "update" : "create"); //[I-S]LN=68;[I-E]
    Console.log("Link: " + API_Url); //[I-S]LN=69;[I-E]
  } //[I-S]LN=70;[I-E]
 //[I-S]LN=71;[I-E]
  public void UpLoadAll() { //[I-S]LN=72;[I-E]
    if (!verifica(true, false)) return; //[I-S]LN=73;[I-E]
    File dir = new File(Dir); //[I-S]LN=74;[I-E]
    if (dir == null || !dir.exists()) return; //[I-S]LN=75;[I-E]
 //[I-S]LN=76;[I-E]
    // "lista todos oa file que existe" //[I-S]LN=77;[I-E]
    gitpushmult.UpVariaPasth(gitpush, dir, dir.getAbsolutePath() + "", linkNamePasth, Commit, pasth, toke); //[I-S]LN=78;[I-E]
  }  //[I-S]LN=79;[I-E]
 //[I-S]LN=80;[I-E]
  public boolean verifica(boolean token, boolean pont) { //[I-S]LN=81;[I-E]
    if (!linkNamePasth.contains("/") || linkNamePasth.isEmpty()) { //[I-S]LN=82;[I-E]
      Toast.showText("esta errado o link do \"nome do usuario do git\" / nome do repositorio", 1); //[I-S]LN=83;[I-E]
      return false; //[I-S]LN=84;[I-E]
    } //[I-S]LN=85;[I-E]
    if (pasth == null || pasth.isEmpty() || (pont && !pasth.contains("."))) { //[I-S]LN=86;[I-E]
      Toast.showText("caminho para o arquivo esta faltando ou errado", 1); //[I-S]LN=87;[I-E]
      return false; //[I-S]LN=88;[I-E]
    } //[I-S]LN=89;[I-E]
    if (token && (toke == null || toke.length() < 20)) { //[I-S]LN=90;[I-E]
      Toast.showText("o toke esta vazio ou faltando", 1); //[I-S]LN=91;[I-E]
      return false; //[I-S]LN=92;[I-E]
    } //[I-S]LN=93;[I-E]
 //[I-S]LN=94;[I-E]
    Dir = Directories.getProjectFolder() + "/Files/" + pasth; //[I-S]LN=95;[I-E]
    return true; //[I-S]LN=96;[I-E]
  } //[I-S]LN=97;[I-E]
} //[I-S]LN=98;[I-E]
//C-R:gitClone
class gitClone { //[I-S]LN=0;[I-E]
  public void GitClone(String link, String path) { //[I-S]LN=1;[I-E]
    try { //[I-S]LN=2;[I-E]
      URL url = new URL(link); //[I-S]LN=3;[I-E]
      InputStream in = url.openStream(); //[I-S]LN=4;[I-E]
      BufferedInputStream bs = new BufferedInputStream(in); //[I-S]LN=5;[I-E]
      FileOutputStream fs = new FileOutputStream(path); //[I-S]LN=6;[I-E]
      byte[] date = new byte[1024]; //[I-S]LN=7;[I-E]
      int count; //[I-S]LN=8;[I-E]
      while ((count = bs.read(date, 0, 1024)) != -1) { //[I-S]LN=9;[I-E]
        fs.write(date, 0, count); //[I-S]LN=10;[I-E]
      } //[I-S]LN=11;[I-E]
      fs.flush(); //[I-S]LN=12;[I-E]
      fs.close(); //[I-S]LN=13;[I-E]
      bs.close(); //[I-S]LN=14;[I-E]
      in.close(); //[I-S]LN=15;[I-E]
    } catch (Exception e) { //[I-S]LN=16;[I-E]
      Console.log(e); //[I-S]LN=17;[I-E]
    } //[I-S]LN=18;[I-E]
  }  //[I-S]LN=19;[I-E]
} //[I-S]LN=20;[I-E]
//C-R:gitPush
class gitPush { //[I-S]LN=0;[I-E]
  public void GitPush(String link, String menssage, String pasth, String token, String sha) { //[I-S]LN=1;[I-E]
    try { //[I-S]LN=2;[I-E]
      byte[] date = readFile(pasth); //[I-S]LN=3;[I-E]
      String encode = Base64.getEncoder().encodeToString(date); //[I-S]LN=4;[I-E]
 //[I-S]LN=5;[I-E]
      // json que sera enviado para api.github //[I-S]LN=6;[I-E]
 //[I-S]LN=7;[I-E]
      StringBuilder json = new StringBuilder(); //[I-S]LN=8;[I-E]
      json.append("{\n  \"message\": \"").append(menssage).append("\",\n  \"content\": \"").append(encode).append("\",\n  \"branch\": \"main\""); //[I-S]LN=9;[I-E]
      if (sha != null && !sha.isEmpty()) json.append(",\n  \"sha\": \"").append(sha).append("\""); //[I-S]LN=10;[I-E]
      json.append("\n}"); //[I-S]LN=11;[I-E]
      Console.log(json.toString()); //[I-S]LN=12;[I-E]
 //[I-S]LN=13;[I-E]
      URL url = new URL(link); //[I-S]LN=14;[I-E]
 //[I-S]LN=15;[I-E]
      // connect com o github //[I-S]LN=16;[I-E]
 //[I-S]LN=17;[I-E]
      HttpURLConnection com = (HttpURLConnection) url.openConnection(); //[I-S]LN=18;[I-E]
      com.setRequestMethod("PUT"); //[I-S]LN=19;[I-E]
      com.setDoOutput(true); //[I-S]LN=20;[I-E]
      com.setRequestProperty("Authorization", "token " + token); //[I-S]LN=21;[I-E]
      com.setRequestProperty("Content-Type", "application/json"); //[I-S]LN=22;[I-E]
 //[I-S]LN=23;[I-E]
      OutputStream output = com.getOutputStream(); //[I-S]LN=24;[I-E]
      output.write(json.toString().getBytes("UTF-8")); //[I-S]LN=25;[I-E]
      output.flush(); //[I-S]LN=26;[I-E]
      output.close(); //[I-S]LN=27;[I-E]
 //[I-S]LN=28;[I-E]
      /// vierifica se teve algum erro ao conectar como github //[I-S]LN=29;[I-E]
 //[I-S]LN=30;[I-E]
      int menss = com.getResponseCode(); //[I-S]LN=31;[I-E]
      Console.log(menss == 201 || menss == 200 ? "file enviado sucess" : "erro em algum folder"); //[I-S]LN=32;[I-E]
 //[I-S]LN=33;[I-E]
      InputStream input = (menss >= 400) ? com.getErrorStream() : com.getInputStream(); //[I-S]LN=34;[I-E]
      BufferedReader reader = new BufferedReader(new InputStreamReader(input)); //[I-S]LN=35;[I-E]
      StringBuilder result = new StringBuilder(); //[I-S]LN=36;[I-E]
      String line; //[I-S]LN=37;[I-E]
      while ((line = reader.readLine()) != null) result.append(line); //[I-S]LN=38;[I-E]
      Console.log("\nreposta: " + result.toString()); //[I-S]LN=39;[I-E]
      input.close(); //[I-S]LN=40;[I-E]
    } catch (Exception e) { //[I-S]LN=41;[I-E]
      Console.log(e); //[I-S]LN=42;[I-E]
    } //[I-S]LN=43;[I-E]
  } //[I-S]LN=44;[I-E]
 //[I-S]LN=45;[I-E]
  /// função que ve o tamanho do file que sera enviado para git para não manda faltando em byte //[I-S]LN=46;[I-E]
 //[I-S]LN=47;[I-E]
  public byte[] readFile(String pasth) { //[I-S]LN=48;[I-E]
    try { //[I-S]LN=49;[I-E]
      FileInputStream fs = new FileInputStream(pasth); //[I-S]LN=50;[I-E]
      ByteArrayOutputStream buffer = new ByteArrayOutputStream(); //[I-S]LN=51;[I-E]
      byte[] date = new byte[1024]; //[I-S]LN=52;[I-E]
      int read; //[I-S]LN=53;[I-E]
      while ((read = fs.read(date)) != -1) buffer.write(date, 0, read); //[I-S]LN=54;[I-E]
      fs.close(); //[I-S]LN=55;[I-E]
      return buffer.toByteArray(); //[I-S]LN=56;[I-E]
    } catch (Exception e) { //[I-S]LN=57;[I-E]
      Console.log(e); //[I-S]LN=58;[I-E]
    } //[I-S]LN=59;[I-E]
    return null; //[I-S]LN=60;[I-E]
  } //[I-S]LN=61;[I-E]
 //[I-S]LN=62;[I-E]
  /// funcão vai busca no json da api.github onde esta o "sha" do file existe no github //[I-S]LN=63;[I-E]
 //[I-S]LN=64;[I-E]
  public String getSha(String link, String token) { //[I-S]LN=65;[I-E]
    try { //[I-S]LN=66;[I-E]
      URL url = new URL(link); //[I-S]LN=67;[I-E]
 //[I-S]LN=68;[I-E]
      HttpURLConnection com = (HttpURLConnection) url.openConnection(); //[I-S]LN=69;[I-E]
      com.setRequestMethod("GET"); //[I-S]LN=70;[I-E]
      com.setRequestProperty("Authorization", "token " + token); //[I-S]LN=71;[I-E]
      com.setRequestProperty("Accept", "application/vnd.github.v3+json"); //[I-S]LN=72;[I-E]
 //[I-S]LN=73;[I-E]
      int menss = com.getResponseCode(); //[I-S]LN=74;[I-E]
      InputStream input = (menss >= 400) ? com.getErrorStream() : com.getInputStream(); //[I-S]LN=75;[I-E]
      BufferedReader reader = new BufferedReader(new InputStreamReader(input)); //[I-S]LN=76;[I-E]
      StringBuilder result = new StringBuilder(); //[I-S]LN=77;[I-E]
      String line; //[I-S]LN=78;[I-E]
      while ((line = reader.readLine()) != null) result.append(line); //[I-S]LN=79;[I-E]
      input.close(); //[I-S]LN=80;[I-E]
 //[I-S]LN=81;[I-E]
      GitJson json = (GitJson) Json.fromJson(result.toString(), GitJson.class, true); //[I-S]LN=82;[I-E]
 //[I-S]LN=83;[I-E]
      if (json != null && json.sha != null) return json.sha; //[I-S]LN=84;[I-E]
      else Console.log("falho o sha"); //[I-S]LN=85;[I-E]
      input.close(); //[I-S]LN=86;[I-E]
    } catch (Exception e) { //[I-S]LN=87;[I-E]
      Console.log(e); //[I-S]LN=88;[I-E]
    } //[I-S]LN=89;[I-E]
    return ""; //[I-S]LN=90;[I-E]
  } //[I-S]LN=91;[I-E]
 //[I-S]LN=92;[I-E]
  public static class GitJson { //[I-S]LN=93;[I-E]
    public String sha; //[I-S]LN=94;[I-E]
  } //[I-S]LN=95;[I-E]
}  //[I-S]LN=96;[I-E]
//C-R:gitPushMult
class gitPushMult { //[I-S]LN=0;[I-E]
  public void UpVariaPasth(gitPush gitpush, File dir, String base, String linkNamePasth,String Commit, String pasth, String toke) { //[I-S]LN=1;[I-E]
    File[] file = dir.listFiles(); //[I-S]LN=2;[I-E]
    if (file == null) return; //[I-S]LN=3;[I-E]
    for (File f : file) { //[I-S]LN=4;[I-E]
      if (f.isDirectory()) UpVariaPasth(gitpush, f, base, linkNamePasth,Commit, pasth, toke); //[I-S]LN=5;[I-E]
      else if (!f.getName().startsWith(".")) { //[I-S]LN=6;[I-E]
 //[I-S]LN=7;[I-E]
        String name = f.getAbsolutePath().replace(base, ""); //[I-S]LN=8;[I-E]
        String cominho = f.getAbsolutePath(); //[I-S]LN=9;[I-E]
        String API_Url = "https://api.github.com/repos/" + linkNamePasth + "/contents/Files/" + pasth + name + "?ref=main"; //[I-S]LN=10;[I-E]
 //[I-S]LN=11;[I-E]
        // busca o sha do file //[I-S]LN=12;[I-E]
 //[I-S]LN=13;[I-E]
        String shas = gitpush.getSha(API_Url, toke); //[I-S]LN=14;[I-E]
        gitpush.GitPush(API_Url, Commit, cominho, toke, shas); //[I-S]LN=15;[I-E]
 //[I-S]LN=16;[I-E]
        Console.log(!shas.isEmpty() ? "update" : "create"); //[I-S]LN=17;[I-E]
        Console.log("Link: " + API_Url); //[I-S]LN=18;[I-E]
      } //[I-S]LN=19;[I-E]
    }  //[I-S]LN=20;[I-E]
  } //[I-S]LN=21;[I-E]
} //[I-S]LN=22;[I-E]